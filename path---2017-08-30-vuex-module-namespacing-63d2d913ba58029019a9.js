webpackJsonp([0x875e6f814c60],{458:function(n,s){n.exports={data:{site:{siteMetadata:{title:"JIGSAWYE",author:"Evan Ye",siteUrl:"https://jigsawye.com",disqusShortname:"jigsawnotes"}},markdownRemark:{id:"/Users/jigsawye/projects/gatsby-blog/content/posts/2017-08-30-vuex-module-namespacing.md absPath of file >>> MarkdownRemark",html:'<p>去年底退伍之後進入新公司開始工作，近一年來都在 Vue / Vuex / Vue-Router 之間打滾，也寫出一些心得了，就在睽違一年多之後可以來寫新的東西了 XD。</p>\n<p>大部分人透過 Vue 開發 SPA（Single Page Application）時通常都會搭配 Vuex 一起使用，如果不知道 Vuex 的作用的話那可以先去參考一下<a href="https://vuex.vuejs.org/en/intro.html">官方介紹</a>。</p>\n<!-- more -->\n<blockquote>\n<p>以下範例均來自於<a href="https://vuex.vuejs.org/en/modules.html">官方文件</a>並依據本文加以修改、調整與翻譯</p>\n</blockquote>\n<h4 id="state"><a href="#state" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>State</h4>\n<h5 id="基礎介紹"><a href="#%E5%9F%BA%E7%A4%8E%E4%BB%8B%E7%B4%B9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>基礎介紹</h5>\n<p>因為官方的文件中都有講解跟範例了，所以 mutation 跟 action 及 getters 的作用就不多提了，以下就大概提一下 state 的部分。</p>\n<p>在 Vuex 中都會有個 State，裡面包含了儲存在 Vuex 中的所有資料，大致長得像這樣：</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  state<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    count<span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token function">increment</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">.</span>count<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h5 id="實際情況"><a href="#%E5%AF%A6%E9%9A%9B%E6%83%85%E6%B3%81" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>實際情況</h5>\n<p>不過在一般專案開發不可能只有一兩個變數而已，所以會切分成好幾個 <code class="language-text">module</code>，大致如下：</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token punctuation">{</span>\n  state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  actions<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  getters<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> moduleB <span class="token operator">=</span> <span class="token punctuation">{</span>\n  state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  actions<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    a<span class="token punctuation">:</span> moduleA<span class="token punctuation">,</span>\n    b<span class="token punctuation">:</span> moduleB\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>如果你想存取 state 或是 dispatch actions 時會如下：</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js">store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>a <span class="token comment">// -> `moduleA`\'s state</span>\nstore<span class="token punctuation">.</span>state<span class="token punctuation">.</span>b <span class="token comment">// -> `moduleB`\'s state</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'ActionOfModuleA\'</span><span class="token punctuation">)</span> <span class="token comment">// -> `moduleA`\'s action</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'ActionOfModuleB\'</span><span class="token punctuation">)</span> <span class="token comment">// -> `moduleB`\'s action</span></code></pre>\n      </div>\n<p>因爲將多個 module 併入一個 Vuex Store 時，actions 及 mutations 都是在 root space 中，所以一般會為了避免 actions / mutations 的命名衝突，會自己加上 namespace 或是另外去建立這些名稱的 constants：</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// mutation-types.js</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SOME_MUTATION_A</span> <span class="token operator">=</span> <span class="token string">\'A/SOME_MUTATION\'</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SOME_MUTATION_B</span> <span class="token operator">=</span> <span class="token string">\'B/SOME_MUTATION\'</span>\n<span class="token comment">// store.js</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">SOME_MUTATION_A</span><span class="token punctuation">,</span> <span class="token constant">SOME_MUTATION_B</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./mutation-types\'</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    moduleA<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 我們可以使用 ES2015 的 computed property name 功能定義一個 function name</span>\n        <span class="token punctuation">[</span><span class="token constant">SOME_MUTATION_A</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// mutate state</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    moduleB<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token punctuation">[</span><span class="token constant">SOME_MUTATION_B</span><span class="token punctuation">]</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// mutate state</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h4 id="vuex-namespacing"><a href="#vuex-namespacing" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Vuex namespacing</h4>\n<h5 id="namespaced-true"><a href="#namespaced-true" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>namespaced: true</h5>\n<p>Vuex 在 <code class="language-text">2.1.0</code> 版時在 <code class="language-text">module</code> 中加入了 <code class="language-text">namespaced</code> 的選項，透過啟用這個選項，Vuex 會自動幫你在 module 的 actions / mutations / getters 加上 namespace 的 prefix：</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token punctuation">{</span>\n  namespced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  actions<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  getters<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> moduleB <span class="token operator">=</span> <span class="token punctuation">{</span>\n  namespced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  actions<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    a<span class="token punctuation">:</span> moduleA<span class="token punctuation">,</span>\n    b<span class="token punctuation">:</span> moduleB\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nstore<span class="token punctuation">.</span>state<span class="token punctuation">.</span>a <span class="token comment">// -> `moduleA`\'s state</span>\nstore<span class="token punctuation">.</span>state<span class="token punctuation">.</span>b <span class="token comment">// -> `moduleB`\'s state</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'a/ActionOfModuleA\'</span><span class="token punctuation">)</span> <span class="token comment">// -> `moduleA`\'s action</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'b/ActionOfModuleB\'</span><span class="token punctuation">)</span> <span class="token comment">// -> `moduleB`\'s action</span></code></pre>\n      </div>\n<p>除此之外，namespaced 也支援巢狀的 module，e.g.</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    a<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      actions<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        moduleC\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    b<span class="token punctuation">:</span> moduleB\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h5 id="how-the-namespecing-do"><a href="#how-the-namespecing-do" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How the namespecing do?</h5>\n<p>這邊稍微講一下 Vuex 的 namespacing 做了哪些事情：</p>\n<ul>\n<li>所有的 actions、mutations 都會加上 prefix：</li>\n</ul>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// before</span>\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    account<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      namespaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// module assets</span>\n      state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// module 的 state 已經是巢狀的，不會受到 namespace 影響</span>\n      getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">isAdmin</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -> getters[\'account/isAdmin\']</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      actions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">login</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -> dispatch(\'account/login\')</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">login</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -> commit(\'account/login\')</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// nested modules</span>\n      modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 從父 module 繼承 namespace</span>\n        myPage<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token function">profile</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -> getters[\'account/profile\']</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n        <span class="token comment">// 進一步的巢狀 namespace</span>\n        posts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          namespaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n          state<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token function">popular</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -> getters[\'account/posts/popular\']</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<ul>\n<li>\n<p>在 module 內的所有 actions、mudations、state 會自動加上 namespace</p>\n</li>\n<li>\n<p>如果你要在 locale module 使用其他 module 的 actions / mutations，請在 <code class="language-text">dispatch</code> / <code class="language-text">commit</code> 的第三個參數帶入 <code class="language-text">{ root: true }</code></p>\n</li>\n</ul>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js">modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  foo<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    namespaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n    getters<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// `getters` 是 module 內的其他 getters，如果要存取 rootGetters 可以使用第四個參數</span>\n      <span class="token function">someGetter</span> <span class="token punctuation">(</span>state<span class="token punctuation">,</span> getters<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> rootGetters<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        getters<span class="token punctuation">.</span>someOtherGetter <span class="token comment">// -> \'foo/someOtherGetter\'</span>\n        rootGetters<span class="token punctuation">.</span>someOtherGetter <span class="token comment">// -> \'someOtherGetter\'</span>\n        rootGetters<span class="token punctuation">[</span><span class="token string">\'bar/someOtherGetter\'</span><span class="token punctuation">]</span> <span class="token comment">// -> \'bar/someOtherGetter\'</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      someOtherGetter<span class="token punctuation">:</span> state <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    actions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// dispatch 及 commit 是會自動加上 module 內的 namespace</span>\n      <span class="token comment">// 如果要存取 root dispatch 或 commit 可以加入 `root` 選項</span>\n      <span class="token function">someAction</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> getters<span class="token punctuation">,</span> rootGetters <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        getters<span class="token punctuation">.</span>someGetter <span class="token comment">// -> \'foo/someGetter\'</span>\n        rootGetters<span class="token punctuation">.</span>someGetter <span class="token comment">// -> \'someGetter\'</span>\n\n        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'someOtherAction\'</span><span class="token punctuation">)</span> <span class="token comment">// -> \'foo/someOtherAction\'</span>\n        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'someOtherAction\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> root<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -> \'someOtherAction\'</span>\n\n        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">\'someMutation\'</span><span class="token punctuation">)</span> <span class="token comment">// -> \'foo/someMutation\'</span>\n        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">\'someMutation\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> root<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -> \'someMutation\'</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">someOtherAction</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> payload<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h4 id="helpers"><a href="#helpers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Helpers</h4>\n<p>以下就講解一下 Vuex 的 helpers 在遇到 namespaced 的用法</p>\n<h5 id="mapstate"><a href="#mapstate" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>mapState</h5>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js">computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    a<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>some<span class="token punctuation">.</span>nested<span class="token punctuation">.</span>module<span class="token punctuation">.</span>a<span class="token punctuation">,</span> <span class="token comment">// this.a</span>\n    b<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>some<span class="token punctuation">.</span>nested<span class="token punctuation">.</span>module<span class="token punctuation">.</span>b  <span class="token comment">// this.b</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token comment">// to</span>\n\ncomputed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    a<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>a<span class="token punctuation">,</span> <span class="token comment">// this.a</span>\n    b<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>b  <span class="token comment">// this.b</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// or</span>\n  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string">\'a\'</span><span class="token punctuation">,</span>  <span class="token comment">// this.a</span>\n    <span class="token string">\'b\'</span>   <span class="token comment">// this.b</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token comment">// alias</span>\n  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    dataA<span class="token punctuation">:</span> <span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token comment">// this.dataA</span>\n    dataB<span class="token punctuation">:</span> <span class="token string">\'b\'</span>  <span class="token comment">// this.dataB</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>\n      </div>\n<h5 id="mapactions"><a href="#mapactions" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>mapActions</h5>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js">methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token string">\'some/nested/module/foo\'</span><span class="token punctuation">,</span> <span class="token comment">// this.foo()</span>\n    <span class="token string">\'some/nested/module/bar\'</span>  <span class="token comment">// this.bar()</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// to</span>\n\nmethods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string">\'foo\'</span><span class="token punctuation">,</span> <span class="token comment">// this.foo()</span>\n    <span class="token string">\'bar\'</span>  <span class="token comment">// this.bar()</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// alias</span>\n  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    fooA<span class="token punctuation">:</span> <span class="token string">\'foo\'</span><span class="token punctuation">,</span> <span class="token comment">// this.fooA();</span>\n    barA<span class="token punctuation">:</span> <span class="token string">\'bar\'</span>  <span class="token comment">// this.barA()</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h5 id="mapgetters"><a href="#mapgetters" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>mapGetters</h5>\n<p>與 <code class="language-text">mapActions</code> 用法相同</p>\n<h5 id="createnamespacedhelpers"><a href="#createnamespacedhelpers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>createNamespacedHelpers</h5>\n<p><code class="language-text">2.4.0</code> 加入的新 helper</p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createNamespacedHelpers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> mapState<span class="token punctuation">,</span> mapActions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span><span class="token string">\'some/nested/module\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// look up in `some/nested/module`</span>\n    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      a<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>a<span class="token punctuation">,</span> <span class="token comment">// this.a</span>\n      b<span class="token punctuation">:</span> state <span class="token operator">=></span> state<span class="token punctuation">.</span>b  <span class="token comment">// this.b</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">// or</span>\n    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token comment">// this.a</span>\n      <span class="token string">\'b\'</span>  <span class="token comment">// this.b</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// look up in `some/nested/module`</span>\n    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token string">\'foo\'</span><span class="token punctuation">,</span> <span class="token comment">// this.foo()</span>\n      <span class="token string">\'bar\'</span>  <span class="token comment">// this.bar()</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>',
fields:{slug:"/2017/08/30/vuex-module-namespacing/"},frontmatter:{title:"透過 namespacing 讓 Vuex 更結構化",date:"August 30, 2017"}}},pathContext:{slug:"/2017/08/30/vuex-module-namespacing/"}}}});
//# sourceMappingURL=path---2017-08-30-vuex-module-namespacing-63d2d913ba58029019a9.js.map