{"version":3,"sources":["webpack:///path---2017-09-04-make-good-use-of-lodash-f1cc9e1ca2e913eed0e6.js","webpack:///./.cache/json/2017-09-04-make-good-use-of-lodash.json"],"names":["webpackJsonp","461","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,WAAAC,OAAA,YAAuCC,gBAAmBC,GAAA,8HAAAC,KAAA;AAAmp0CC,aAAk9BL,MAAA,2BAAAM,KAAA,wBAAiEC,aAAgBC,KAAA","file":"path---2017-09-04-make-good-use-of-lodash-f1cc9e1ca2e913eed0e6.js","sourcesContent":["webpackJsonp([161789320775696],{\n\n/***/ 461:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"JIGSAWYE\",\"author\":\"Evan Ye\"}},\"markdownRemark\":{\"id\":\"/Users/jigsawye/projects/gatsby-blog/content/posts/2017-09-04-make-good-use-of-lodash.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>一般在開發 JavaScript 的專案的時候，一定會大量的操作 <code class=\\\"language-text\\\">Array</code> / <code class=\\\"language-text\\\">Object</code> / <code class=\\\"language-text\\\">String</code>…等，但大部分人通常會使用 prototype fucntion，例如使用 <code class=\\\"language-text\\\">Array.prototype.push</code>、<code class=\\\"language-text\\\">Array.prototype.map</code> 等等，此文將會講解透過 <a href=\\\"https://lodash.com/\\\">lodash</a> 所提供的方法，可以如何讓程式碼更佳的簡潔及好維護。</p>\\n<!-- more -->\\n<blockquote>\\n<p>以下程式碼均在 Webpack 且使用 EcmaScript 2015 的環境下執行。</p>\\n</blockquote>\\n<h4 id=\\\"什麼是-lodash\\\"><a href=\\\"#%E4%BB%80%E9%BA%BC%E6%98%AF-lodash\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什麼是 lodash</h4>\\n<p>擷取自官方：</p>\\n<blockquote>\\n<p>A modern JavaScript utility library delivering modularity, performance &#x26; extras.</p>\\n</blockquote>\\n<p>簡單來說就是一個擴充 / 增加 JavaScript 的 Library，裡面提供的很多讓你的 JavaScript 更威猛的方法。</p>\\n<h5 id=\\\"在專案中使用-lodash\\\"><a href=\\\"#%E5%9C%A8%E5%B0%88%E6%A1%88%E4%B8%AD%E4%BD%BF%E7%94%A8-lodash\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在專案中使用 lodash</h5>\\n<p>想要在專案中使用 lodash 相當簡單，只需要透過 <code class=\\\"language-text\\\">npm</code> or <code class=\\\"language-text\\\">yarn</code> 安裝：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">$ <span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> lodash\\n<span class=\\\"token comment\\\"># or</span>\\n$ yarn add lodash</code></pre>\\n      </div>\\n<p>接著在你的程式碼中 import 即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> map <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash/map'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> filter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash/filter'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h5 id=\\\"避免將-lodash-lib-全數引入\\\"><a href=\\\"#%E9%81%BF%E5%85%8D%E5%B0%87-lodash-lib-%E5%85%A8%E6%95%B8%E5%BC%95%E5%85%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>避免將 lodash lib 全數引入</h5>\\n<p>應該有人發現上方 import 的 code 為什麼是分別 import 所需的方法，而不是使用以下簡潔方式：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> map<span class=\\\"token punctuation\\\">,</span> filter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>因為如果透過以上方式 import，你會將整個 lodash library 都 bundle 起來，若是分別 import，則只會 bundle 你所 import 的方法。</p>\\n<p>但是這樣很不美觀，尤其在一個 JS 檔案不可能只使用一兩個 lodash 方法，所以我推薦使用 <a href=\\\"https://github.com/lodash/babel-plugin-lodash\\\">babel-plugin-lodash</a>，就可以採用以上方式 import 了。</p>\\n<h4 id=\\\"幾個常用方法\\\"><a href=\\\"#%E5%B9%BE%E5%80%8B%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>幾個常用方法</h4>\\n<p>以下就介紹幾個我在開發專案時常常使用到的 lodash 方法，lodash 的完整文件由此去。</p>\\n<h5 id=\\\"collection\\\"><a href=\\\"#collection\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Collection</h5>\\n<p>Collection 指的就是 <code class=\\\"language-text\\\">Array</code> 及 <code class=\\\"language-text\\\">Object</code> 此類可迭代的方法，比較常見的就是 <code class=\\\"language-text\\\">map</code> 及 <code class=\\\"language-text\\\">filter</code>，這兩個方法在原生 JavaScrtip 中是不支援 <code class=\\\"language-text\\\">Object</code> 的，所以通常一般遇到 <code class=\\\"language-text\\\">Object</code> 需要迭代時都會使用 <code class=\\\"language-text\\\">Object.keys</code> 或是 <code class=\\\"language-text\\\">for in</code> 這種很醜的方式去做，但是在 lodash 中則可以將此類方法用在 <code class=\\\"language-text\\\">Object</code>，相當推薦！</p>\\n<blockquote>\\n<p>這邊要注意的是，不論傳入的是 <code class=\\\"language-text\\\">Array</code> 還是 <code class=\\\"language-text\\\">Object</code>，一律會回傳 <code class=\\\"language-text\\\">Array</code></p>\\n</blockquote>\\n<p><code class=\\\"language-text\\\">map()</code></p>\\n<p>迭代每個元素，並回傳新的 Array。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">square</span> <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">=></span> n <span class=\\\"token operator\\\">*</span> n<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> square<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [16, 64]</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">8</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> square<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [16, 64] (不保證迭代順序)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney', 'fred'] (取得指定屬性的 Array)</span>\\n\\n<span class=\\\"token comment\\\">// 如果 API 收到奇怪的 Object</span>\\n<span class=\\\"token keyword\\\">const</span> weireUsers <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>weireUsers<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>user <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [{ id: 1, user: 'barney' }, { id: 2, user: 'fred' }];</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">each()</code> / <code class=\\\"language-text\\\">forEach()</code></p>\\n<p>迭代每個元素，但不回傳任何東西。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> forEach <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> value <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 先印出 `1` 接著是 `2`.</span>\\n\\n<span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 先印出 'a' 接著是 'b' (不保證迭代順序)。</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">filter()</code></p>\\n<p>迭代每個元素，並回傳符合條件的 Array，另外還有與此相反的方法 <code class=\\\"language-text\\\">reject()</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> filter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>   <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> <span class=\\\"token operator\\\">!</span>o<span class=\\\"token punctuation\\\">.</span>active<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['fred'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['fred'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney'] 的 objects</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">find()</code></p>\\n<p>尋找指定的元素。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> find <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>age <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'barney' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'pebbles' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'fred' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'barney' 的 object</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">some()</code></p>\\n<p>判斷是否有符合條件的元素，與此相反的有 <code class=\\\"language-text\\\">every()</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> some <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'yes'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>   <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span></code></pre>\\n      </div>\\n<h5 id=\\\"array\\\"><a href=\\\"#array\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Array</h5>\\n<p>除非是使用 FP，不然 Array 的方法其實用到的比較少，因為很大一部分都只是將 <code class=\\\"language-text\\\">array.f(...arguments)</code> 方法轉成 <code class=\\\"language-text\\\">f(array, ...arguments)</code> 的方法而已。</p>\\n<p><code class=\\\"language-text\\\">findIndex()</code></p>\\n<p>尋找 Array 中指定條件的 index。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> findIndex <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>user <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 0</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 1</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 0</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 2</span></code></pre>\\n      </div>\\n<h5 id=\\\"object\\\"><a href=\\\"#object\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Object</h5>\\n<p>比較特別的就是以下兩種，至於其他方法也是在 FP 時才會用到，一般情形下不常用。</p>\\n<p><code class=\\\"language-text\\\">mapKeys()</code></p>\\n<p>迭代 Object 並回傳修改 Key 的 Object。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> mapKeys <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">mapKeys</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> key <span class=\\\"token operator\\\">+</span> value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'a1': 1, 'b2': 2 }</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">mapValue()</code></p>\\n<p>迭代 Object 並回傳修改 Value 的 Object。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">:</span>    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'fred': 40, 'pebbles': 1 } (不保證迭代順序)</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'fred': 40, 'pebbles': 1 } (不保證迭代順序)</span></code></pre>\\n      </div>\\n<h5 id=\\\"string\\\"><a href=\\\"#string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String</h5>\\n<p>lodash 提供的方法在 <code class=\\\"language-text\\\">String.prototype</code> 其實都有了，不過個人為了美觀也會一併使用 lodash 的方法，有興趣的人可以直接去看官方文件，這邊就不多介紹了。</p>\\n<h5 id=\\\"others\\\"><a href=\\\"#others\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Others</h5>\\n<p>除此之外 lodash 還有提供很多不同的方法，這邊介紹幾個我常用到的</p>\\n<p><code class=\\\"language-text\\\">isEmpty()</code></p>\\n<p>用於判斷是否是空的 object, collection, map, 或 set，相當於 <code class=\\\"language-text\\\">value.length === 0</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> isEmpty <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">isEqual()</code></p>\\n<p>判斷兩個值是否完全相同，常用於兩個不同的 Object 比較。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> isEqual <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> object <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> other <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">isEqual</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> other<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\nobject <span class=\\\"token operator\\\">===</span> other<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">range()</code></p>\\n<p>產生指定形式的 Array</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">[start=0] (number)</code>: 起始值</li>\\n<li><code class=\\\"language-text\\\">end (number)</code>: 結束值</li>\\n<li><code class=\\\"language-text\\\">[step=1] (number)</code>: 遞增間隔</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> range <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, 1, 2, 3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, -1, -2, -3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [1, 2, 3, 4]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, 5, 10, 15]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, -1, -2, -3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [1, 1, 1]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => []</span></code></pre>\\n      </div>\\n<h4 id=\\\"結語\\\"><a href=\\\"#%E7%B5%90%E8%AA%9E\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>結語</h4>\\n<p>如此之外，lodash 還有提供 <a href=\\\"https://github.com/lodash/lodash/wiki/FP-Guide\\\">lodash/fp</a>，學會一點簡單的 FP( Fucntional Programming )可以讓你的程式碼更簡潔易維護，有興趣的人可以去官方文件看看。</p>\\n<p>如果不知道什麼是 FP，可以參考我翻譯到一半的 <a href=\\\"https://jigsawye.gitbooks.io/mostly-adequate-guide/content/\\\">JavaScript Functional Programming 指南</a>。</p>\",\"frontmatter\":{\"title\":\"充分利用 lodash 讓你的程式碼更易讀及維護\",\"date\":\"September 04, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/09/04/make-good-use-of-lodash/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-09-04-make-good-use-of-lodash-f1cc9e1ca2e913eed0e6.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"JIGSAWYE\",\"author\":\"Evan Ye\"}},\"markdownRemark\":{\"id\":\"/Users/jigsawye/projects/gatsby-blog/content/posts/2017-09-04-make-good-use-of-lodash.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>一般在開發 JavaScript 的專案的時候，一定會大量的操作 <code class=\\\"language-text\\\">Array</code> / <code class=\\\"language-text\\\">Object</code> / <code class=\\\"language-text\\\">String</code>…等，但大部分人通常會使用 prototype fucntion，例如使用 <code class=\\\"language-text\\\">Array.prototype.push</code>、<code class=\\\"language-text\\\">Array.prototype.map</code> 等等，此文將會講解透過 <a href=\\\"https://lodash.com/\\\">lodash</a> 所提供的方法，可以如何讓程式碼更佳的簡潔及好維護。</p>\\n<!-- more -->\\n<blockquote>\\n<p>以下程式碼均在 Webpack 且使用 EcmaScript 2015 的環境下執行。</p>\\n</blockquote>\\n<h4 id=\\\"什麼是-lodash\\\"><a href=\\\"#%E4%BB%80%E9%BA%BC%E6%98%AF-lodash\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什麼是 lodash</h4>\\n<p>擷取自官方：</p>\\n<blockquote>\\n<p>A modern JavaScript utility library delivering modularity, performance &#x26; extras.</p>\\n</blockquote>\\n<p>簡單來說就是一個擴充 / 增加 JavaScript 的 Library，裡面提供的很多讓你的 JavaScript 更威猛的方法。</p>\\n<h5 id=\\\"在專案中使用-lodash\\\"><a href=\\\"#%E5%9C%A8%E5%B0%88%E6%A1%88%E4%B8%AD%E4%BD%BF%E7%94%A8-lodash\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在專案中使用 lodash</h5>\\n<p>想要在專案中使用 lodash 相當簡單，只需要透過 <code class=\\\"language-text\\\">npm</code> or <code class=\\\"language-text\\\">yarn</code> 安裝：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">$ <span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> lodash\\n<span class=\\\"token comment\\\"># or</span>\\n$ yarn add lodash</code></pre>\\n      </div>\\n<p>接著在你的程式碼中 import 即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> map <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash/map'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> filter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash/filter'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h5 id=\\\"避免將-lodash-lib-全數引入\\\"><a href=\\\"#%E9%81%BF%E5%85%8D%E5%B0%87-lodash-lib-%E5%85%A8%E6%95%B8%E5%BC%95%E5%85%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>避免將 lodash lib 全數引入</h5>\\n<p>應該有人發現上方 import 的 code 為什麼是分別 import 所需的方法，而不是使用以下簡潔方式：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> map<span class=\\\"token punctuation\\\">,</span> filter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>因為如果透過以上方式 import，你會將整個 lodash library 都 bundle 起來，若是分別 import，則只會 bundle 你所 import 的方法。</p>\\n<p>但是這樣很不美觀，尤其在一個 JS 檔案不可能只使用一兩個 lodash 方法，所以我推薦使用 <a href=\\\"https://github.com/lodash/babel-plugin-lodash\\\">babel-plugin-lodash</a>，就可以採用以上方式 import 了。</p>\\n<h4 id=\\\"幾個常用方法\\\"><a href=\\\"#%E5%B9%BE%E5%80%8B%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>幾個常用方法</h4>\\n<p>以下就介紹幾個我在開發專案時常常使用到的 lodash 方法，lodash 的完整文件由此去。</p>\\n<h5 id=\\\"collection\\\"><a href=\\\"#collection\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Collection</h5>\\n<p>Collection 指的就是 <code class=\\\"language-text\\\">Array</code> 及 <code class=\\\"language-text\\\">Object</code> 此類可迭代的方法，比較常見的就是 <code class=\\\"language-text\\\">map</code> 及 <code class=\\\"language-text\\\">filter</code>，這兩個方法在原生 JavaScrtip 中是不支援 <code class=\\\"language-text\\\">Object</code> 的，所以通常一般遇到 <code class=\\\"language-text\\\">Object</code> 需要迭代時都會使用 <code class=\\\"language-text\\\">Object.keys</code> 或是 <code class=\\\"language-text\\\">for in</code> 這種很醜的方式去做，但是在 lodash 中則可以將此類方法用在 <code class=\\\"language-text\\\">Object</code>，相當推薦！</p>\\n<blockquote>\\n<p>這邊要注意的是，不論傳入的是 <code class=\\\"language-text\\\">Array</code> 還是 <code class=\\\"language-text\\\">Object</code>，一律會回傳 <code class=\\\"language-text\\\">Array</code></p>\\n</blockquote>\\n<p><code class=\\\"language-text\\\">map()</code></p>\\n<p>迭代每個元素，並回傳新的 Array。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> map <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">square</span> <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">=></span> n <span class=\\\"token operator\\\">*</span> n<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> square<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [16, 64]</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">8</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> square<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [16, 64] (不保證迭代順序)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney', 'fred'] (取得指定屬性的 Array)</span>\\n\\n<span class=\\\"token comment\\\">// 如果 API 收到奇怪的 Object</span>\\n<span class=\\\"token keyword\\\">const</span> weireUsers <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>weireUsers<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>user<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>user <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [{ id: 1, user: 'barney' }, { id: 2, user: 'fred' }];</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">each()</code> / <code class=\\\"language-text\\\">forEach()</code></p>\\n<p>迭代每個元素，但不回傳任何東西。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> forEach <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> value <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 先印出 `1` 接著是 `2`.</span>\\n\\n<span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 先印出 'a' 接著是 'b' (不保證迭代順序)。</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">filter()</code></p>\\n<p>迭代每個元素，並回傳符合條件的 Array，另外還有與此相反的方法 <code class=\\\"language-text\\\">reject()</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> filter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>   <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> <span class=\\\"token operator\\\">!</span>o<span class=\\\"token punctuation\\\">.</span>active<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['fred'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['fred'] 的 objects</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => ['barney'] 的 objects</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">find()</code></p>\\n<p>尋找指定的元素。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> find <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">36</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>age <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'barney' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'pebbles' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'fred' 的 object</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 'barney' 的 object</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">some()</code></p>\\n<p>判斷是否有符合條件的元素，與此相反的有 <code class=\\\"language-text\\\">every()</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> some <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'yes'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> Boolean<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>   <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span></code></pre>\\n      </div>\\n<h5 id=\\\"array\\\"><a href=\\\"#array\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Array</h5>\\n<p>除非是使用 FP，不然 Array 的方法其實用到的比較少，因為很大一部分都只是將 <code class=\\\"language-text\\\">array.f(...arguments)</code> 方法轉成 <code class=\\\"language-text\\\">f(array, ...arguments)</code> 的方法而已。</p>\\n<p><code class=\\\"language-text\\\">findIndex()</code></p>\\n<p>尋找 Array 中指定條件的 index。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> findIndex <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>user <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'barney'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 0</span>\\n\\n<span class=\\\"token comment\\\">// `_.matches` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 1</span>\\n\\n<span class=\\\"token comment\\\">// `_.matchesProperty` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 0</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">findIndex</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'active'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => 2</span></code></pre>\\n      </div>\\n<h5 id=\\\"object\\\"><a href=\\\"#object\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Object</h5>\\n<p>比較特別的就是以下兩種，至於其他方法也是在 FP 時才會用到，一般情形下不常用。</p>\\n<p><code class=\\\"language-text\\\">mapKeys()</code></p>\\n<p>迭代 Object 並回傳修改 Key 的 Object。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> mapKeys <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">mapKeys</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> key <span class=\\\"token operator\\\">+</span> value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'a1': 1, 'b2': 2 }</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">mapValue()</code></p>\\n<p>迭代 Object 並回傳修改 Value 的 Object。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> users <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">:</span>    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'fred'</span><span class=\\\"token punctuation\\\">,</span>    <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">40</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'pebbles'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> o <span class=\\\"token operator\\\">=></span> o<span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'fred': 40, 'pebbles': 1 } (不保證迭代順序)</span>\\n\\n<span class=\\\"token comment\\\">// `_.property` 迭代縮寫</span>\\n<span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>users<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => { 'fred': 40, 'pebbles': 1 } (不保證迭代順序)</span></code></pre>\\n      </div>\\n<h5 id=\\\"string\\\"><a href=\\\"#string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String</h5>\\n<p>lodash 提供的方法在 <code class=\\\"language-text\\\">String.prototype</code> 其實都有了，不過個人為了美觀也會一併使用 lodash 的方法，有興趣的人可以直接去看官方文件，這邊就不多介紹了。</p>\\n<h5 id=\\\"others\\\"><a href=\\\"#others\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Others</h5>\\n<p>除此之外 lodash 還有提供很多不同的方法，這邊介紹幾個我常用到的</p>\\n<p><code class=\\\"language-text\\\">isEmpty()</code></p>\\n<p>用於判斷是否是空的 object, collection, map, 或 set，相當於 <code class=\\\"language-text\\\">value.length === 0</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> isEmpty <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span>\\n\\n<span class=\\\"token function\\\">isEmpty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">isEqual()</code></p>\\n<p>判斷兩個值是否完全相同，常用於兩個不同的 Object 比較。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> isEqual <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> object <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> other <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">isEqual</span><span class=\\\"token punctuation\\\">(</span>object<span class=\\\"token punctuation\\\">,</span> other<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => true</span>\\n\\nobject <span class=\\\"token operator\\\">===</span> other<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => false</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">range()</code></p>\\n<p>產生指定形式的 Array</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">[start=0] (number)</code>: 起始值</li>\\n<li><code class=\\\"language-text\\\">end (number)</code>: 結束值</li>\\n<li><code class=\\\"language-text\\\">[step=1] (number)</code>: 遞增間隔</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> range <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'lodash'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, 1, 2, 3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, -1, -2, -3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [1, 2, 3, 4]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, 5, 10, 15]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [0, -1, -2, -3]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => [1, 1, 1]</span>\\n\\n<span class=\\\"token function\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// => []</span></code></pre>\\n      </div>\\n<h4 id=\\\"結語\\\"><a href=\\\"#%E7%B5%90%E8%AA%9E\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>結語</h4>\\n<p>如此之外，lodash 還有提供 <a href=\\\"https://github.com/lodash/lodash/wiki/FP-Guide\\\">lodash/fp</a>，學會一點簡單的 FP( Fucntional Programming )可以讓你的程式碼更簡潔易維護，有興趣的人可以去官方文件看看。</p>\\n<p>如果不知道什麼是 FP，可以參考我翻譯到一半的 <a href=\\\"https://jigsawye.gitbooks.io/mostly-adequate-guide/content/\\\">JavaScript Functional Programming 指南</a>。</p>\",\"frontmatter\":{\"title\":\"充分利用 lodash 讓你的程式碼更易讀及維護\",\"date\":\"September 04, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/09/04/make-good-use-of-lodash/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-09-04-make-good-use-of-lodash.json\n// module id = 461\n// module chunks = 161789320775696"],"sourceRoot":""}