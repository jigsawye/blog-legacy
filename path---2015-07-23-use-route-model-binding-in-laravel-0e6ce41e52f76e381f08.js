webpackJsonp([0xf79dd79ebafc],{443:function(n,s){n.exports={data:{site:{siteMetadata:{title:"JIGSAWYE",author:"Evan Ye"}},markdownRemark:{id:"/Users/jigsawye/projects/gatsby-blog/content/posts/2015-07-23-use-route-model-binding-in-laravel.md absPath of file >>> MarkdownRemark",html:'<blockquote>\n<p>本文適用於 Laravel 5.0 以上版本。</p>\n</blockquote>\n<h4 id="什麼是-route-model-binding？"><a href="#%E4%BB%80%E9%BA%BC%E6%98%AF-route-model-binding%EF%BC%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>什麼是 Route Model Binding？</h4>\n<blockquote>\n<p>Laravel model binding provides a convenient way to inject class instances into your routes. For example, instead of injecting a user’s ID, you can inject the entire User class instance that matches the given ID.\n(<a href="http://laravel.com/docs/5.0/routing#route-model-binding">http://laravel.com/docs/5.0/routing#route-model-binding</a>)</p>\n</blockquote>\n<!-- more -->\n<p>中文版：</p>\n<blockquote>\n<p>Laravel 模型綁定提供方便的方式將模型實例注入到你的路由中。例如，比起注入 User 的 ID ，你可以選擇注入符合給定 ID 的 User 類別實例。\n(<a href="http://laravel.tw/docs/5.0/routing#route-model-binding">http://laravel.tw/docs/5.0/routing#route-model-binding</a>)</p>\n</blockquote>\n<p>文字敘述不懂沒關係，更快的方式就是舉個例子，假設我們有一個 Resource Route 及對應的 Resource Controller：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php">Route<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'articles\'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">\'ArticlesController\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">class</span> <span class="token class-name">ArticlesController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 省略七個標準 RESTful method</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>一般來說，在 <code class="code language-text">show</code> method 裡我們通常會這樣實作：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token variable">$article</span> <span class="token operator">=</span> Article<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'articles.show\'</span><span class="token punctuation">,</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'article\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>但是只要透過 Route Model Binding，我們的程式碼就可以改成這樣：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span>Article <span class="token variable">$article</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'articles.show\'</span><span class="token punctuation">,</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'article\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>對於我這種超懶的開發者很受用，少寫一行算一行，幫助開發更快速。</p>\n<h4 id="設定-route-model-binding"><a href="#%E8%A8%AD%E5%AE%9A-route-model-binding" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>設定 Route Model Binding</h4>\n<h5 id="綁定-model"><a href="#%E7%B6%81%E5%AE%9A-model" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>綁定 Model</h5>\n<p>一般來說都會將綁定設定在 <code class="code language-text">RouteServiceProvider</code>（App/Provider/RouteServiceProvider.php）中，在這裡我用上述的範例做綁定：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span>Router <span class="token variable">$router</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token variable">$router</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token variable">$router</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'articles\'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">\'App\\Article\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>接著在我們的 method 直接使用 type-hine 注入 Model，就可以直接存取 <code class="code language-text">$article</code> 了：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span>Article <span class="token variable">$article</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'article.show\'</span><span class="token punctuation">,</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'article\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>也就是說，如果 Request 是 <code class="code language-text">/articles/7</code>，那麼 <code class="code language-text">$article</code> 就會是 <code class="code language-text">Article::findOrFail(7)</code>，若該筆資料不存在則會拋出 404。</p>\n<h4 id="綁定做了什麼？"><a href="#%E7%B6%81%E5%AE%9A%E5%81%9A%E4%BA%86%E4%BB%80%E9%BA%BC%EF%BC%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>綁定做了什麼？</h4>\n<p>那麼 <code class="code language-text">bind</code> 做了什麼事呢？讓我們看一下 Route list：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-text"><code class="code language-text">+-----------+---------------------------+------------------+----------------------------+\n| Method    | URI                       | Name             | Action                     |\n+-----------+---------------------------+------------------+----------------------------+\n| GET|HEAD  | articles                  | articles.index   | ArticlesController@index   |\n| GET|HEAD  | articles/create           | articles.create  | ArticlesController@create  |\n| POST      | articles                  | articles.store   | ArticlesController@store   |\n| GET|HEAD  | articles/{articles}       | articles.show    | ArticlesController@show    |\n| GET|HEAD  | articles/{articles}/edit  | articles.edit    | ArticlesController@edit    |\n| PUT       | articles/{articles}       | articles.update  | ArticlesController@update  |\n| PATCH     | articles/{articles}       | articles         | ArticlesController@update  |\n| DELETE    | articles/{articles}       | articles.destroy | ArticlesController@destroy |\n+-----------+---------------------------+------------------+----------------------------+</code></pre>\n      </div>\n<p>注意到有 <code class="code language-text">{articles}</code> 的 Route，這邊的變數 <code class="code language-text">articles</code> 也就是我們在 <code class="code language-text">bind()</code>傳入的第一個參數，Route Model Binding 會自動在你綁定的 Model（第二個參數 <code class="code language-text">\\App\\Article</code>） 搜尋（<code class="code language-text">findOrFail</code>）主鍵為 <code class="code language-text">{articles}</code> 的資料。所以不只在 <code class="code language-text">show</code> method，只要任何有 <code class="code language-text">{articles}</code> 的 Route 都會自動做綁定，相當的方便（懶人）。</p>\n<h4 id="自定搜尋條件"><a href="#%E8%87%AA%E5%AE%9A%E6%90%9C%E5%B0%8B%E6%A2%9D%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>自定搜尋條件</h4>\n<p>有些情況並不適用於預設的 <code class="code language-text">Model::findOrFail($id)</code>，例如只希望找出已經發佈的 Article，這時候可以改變 <code class="code language-text">bind()</code> 的第二個參數為包含自訂搜尋的條件的 Closure：</p>\n<div class="gatsby-highlight">\n      <pre class="code language-php"><code class="code language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span>Router <span class="token variable">$router</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token variable">$router</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token variable">$router</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'articles\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> \\<span class="token package">App<span class="token punctuation">\\</span>Article</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token single-quoted-string string">\'published_at\'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">\'&lt;=\'</span><span class="token punctuation">,</span> Carbon<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>到此你已經瞭解如何運用 Route Model Binding 囉！未來如果搭上 Form Model binding 在開發上會更加的快速（懶人）！</p>',frontmatter:{title:"在 Laravel 使用 Route Model Binding",date:"July 23, 2015"}}},pathContext:{slug:"/2015/07/23/use-route-model-binding-in-laravel/"}}}});
//# sourceMappingURL=path---2015-07-23-use-route-model-binding-in-laravel-0e6ce41e52f76e381f08.js.map